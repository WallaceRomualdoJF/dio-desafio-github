O que é Git?

O Git é um projeto de código aberto maduro e mantido ativamente, originalmente desenvolvido em 2005 por Linus Torvalds, o famoso criador do kernel do sistema operacional Linux. Um número impressionante de projetos de software depende do Git para controle de versão, incluindo projetos comerciais e de código aberto. Os desenvolvedores que trabalharam com o Git estão bem representados no conjunto de talentos de desenvolvimento de software disponíveis e funcionam bem em uma ampla variedade de sistemas operacionais e IDEs (Ambientes de Desenvolvimento Integrado).

Tendo uma arquitetura distribuída, o Git é um exemplo de DVCS (daí o Distributed Version Control System). Em vez de ter apenas um único local para o histórico completo da versão do software, como é comum em sistemas de controle de versão populares como CVS ou Subversion (também conhecido como SVN), no Git, a cópia de trabalho de cada desenvolvedor do código também é um repositório que pode conter o histórico completo de todas as alterações.

Além de ser distribuído, o Git foi projetado com desempenho, segurança e flexibilidade em mente.

As características de desempenho bruto do Git são muito fortes quando comparadas a muitas alternativas. Confirmar novas alterações, ramificar, mesclar e comparar versões anteriores são todos otimizados para desempenho. Os algoritmos implementados dentro do Git aproveitam o profundo conhecimento sobre atributos comuns de árvores de arquivos de código-fonte reais, como eles geralmente são modificados ao longo do tempo e quais são os padrões de acesso.

Ao contrário de alguns softwares de controle de versão, o Git não se deixa enganar pelos nomes dos arquivos ao determinar qual deve ser o armazenamento e o histórico de versões da árvore de arquivos, em vez disso, o Git se concentra no conteúdo do arquivo em si. Afinal, os arquivos de código-fonte são frequentemente renomeados, divididos e reorganizados. O formato de objeto dos arquivos de repositório do Git usa uma combinação de codificação delta (armazenando diferenças de conteúdo), compactação e armazena explicitamente o conteúdo do diretório e os objetos de metadados de versão. O sistema ser distribuído também permite benefícios de desempenho significativos.

Segurança:

O Git foi projetado com a integridade do código-fonte gerenciado como prioridade máxima. O conteúdo dos arquivos, bem como os verdadeiros relacionamentos entre arquivos e diretórios, versões, tags e commits, todos esses objetos no repositório Git são protegidos com um algoritmo de hash criptograficamente seguro chamado SHA1. Isso protege o código e o histórico de alterações contra alterações acidentais e maliciosas e garante que o histórico seja totalmente rastreável.

Flexibilidade:

Um dos principais objetivos de design do Git é a flexibilidade. O Git é flexível em vários aspectos: no suporte a vários tipos de fluxos de trabalho de desenvolvimento não lineares, em sua eficiência em projetos pequenos e grandes e em sua compatibilidade com muitos sistemas e protocolos existentes.